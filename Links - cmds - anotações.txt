==Objetivos
Aplicação e-commerce utilizando conceitos avançados do ASP.NET Core e Angular

==Ferramentas
ASP.NET Core 8
Visual Studio 2022
SQL Server 2018
Docker



==Padrões
SOLID
Clean Code
git-flow

==API Identiddade - Packages
Install-Package Microsoft.AspNetCore.Authentication.JwtBearer
Install-Package Microsoft.AspNetCore.Identity.EntityFrameworkCore
Install-Package Microsoft.AspNetCore.Identity.UI
Install-Package Microsoft.EntityFrameworkCore
Install-Package Microsoft.EntityFrameworkCore.Abstractions
Install-Package Microsoft.EntityFrameworkCore.Relational
Install-Package Microsoft.EntityFrameworkCore.SqlServer
Install-Package Microsoft.EntityFrameworkCore.Tools

==Migrations
Add-Migration Initial
Update-Database

==Pré Requisitos

==Comandos dotnet
dotnet --list-sdks
dotnet --list-runtimes
dotnet --info


==Comandos Git
git status
git add .
git commit -m "nome do commit"
git push

git checkout main
git pull

== Docker
// dokcer run = Dizendo para o docker rodar com imagem rabbit-host
// -d rodar no modo desatachado / pesquisar mais sobre
// --hostname = flag da própria imagem
// rabbit-host = nome do host dop rabbitMQ
// --name rabbit-jefstore = nome da instância
// -p = porta 15672:15672 porta da administração, site onde vai rodar o rabbitMQ, ver as filas
// -p = porta 5672:5672 porta onde o rabbit vai ouvir as mensagens
// rabbit:management = nome da imagem com especialização de gerenciamento, plugin de gerenciamento

dockcer run -d --hostname rabbit-host --name rabbit-jefstore -p 15672:15672 -p 5672:5672 rabbitmq:management